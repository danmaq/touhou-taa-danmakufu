script_enemy_main{
#include_function ".\FUNC\Boss.dnh"
	let count = 0;
	let PrevTime = GetTimer();
	let HoleList = [];
	let TimeMax = 81;
	task Behavior(){
		yield;
		PlaySEEx( sePower1 );
		Concentration01( 120 );
		Wait( 120 );
		MakeRandShot();
		MakeHole();
		loop{
			Wait( 200 );
			ExMove( false, count );
		}
	}
	task MakeRandShot(){
		loop{
			let level = trunc( Max( Smooth( 2.5, 6.5, TimeMax - GetTimer(), TimeMax ), SlowDown( 2.5, 4.5, 300 - GetLife(), 300 ) ) );
			loop( level ){ RandShot(); }
			PlaySEEx( seShot2 );
			Wait( 10 );
		}
	}
	task MakeHole(){
		Wait( 50 );
		loop{
			let angle = -30;
			while( angle <= 30 ){
				Hole( angle );
				Hole( angle + 180 );
				angle += 30;
			}
			PlaySEEx( seShot1 );
			Wait( 120 );
		}
	}
	task RandShot(){
		let dir = [ -1, 1 ][ rand_int( 0, 1 ) ];
		let obj = SetShotObject( GetCenterX() + 192 * dir, rand( GetClipMinY(), GetClipMaxY() ), 0, 90 * dir + 90, ORANGE21, 30 );
		while( !Obj_BeDeleted( obj ) ){
			if( Obj_GetSpeed( obj ) < 1 ){ Obj_SetSpeed( obj, Obj_GetSpeed( obj ) + 0.01 ); }
			CheckInHole( obj );
			yield;
		}
	}
	function CheckInHole( let obj ){
		let i = 0;
		loop( length( HoleList ) ){
			if( Collision_Obj_Obj( HoleList[ i ], obj ) ){ Obj_SetAngle( obj, Obj_GetAngle( obj ) + 1 ); }
			i++;
		}
	}
	task Hole( let angle ){
		let obj = SetShotObject( GetX(), GetY(), 0.7, GetAngleToPlayer() + angle, BLUE03, 30 );
		HoleList = HoleList ~ [ obj ];
		while( !Obj_BeDeleted( obj ) ){ yield; }
		let i = 0;
		loop( length( HoleList ) ){
			if( HoleList[ i ] == obj ){
				HoleList = erase( HoleList, i );
				return;
			}
			i++;
		}
	}
	@Initialize{
		SetLife( 500 );
		SetScore( 7777777 );
		SetTimer( TimeMax );
		SetInvincibility( 130 );
		SetDamageRate( 8, 0 );
		SetMovePosition03( GetCenterX(), GetClipMinY() + 96, 20, 2.5 );
		SetEffectForZeroLife( 1, 0, 0 );
		SetCommonData( "ShowName", 9 );
		if( GetCommonDataDefault( "SpellPractice", false ) ){ LastSpell(); }
		StartSpell( 33, imgCutInRenko, 192, 288 );
		Behavior();
	}
	@MainLoop{
		SetCommonData( "SpellBonus", [ GetSpellCardBonusScore(), count ] );
		if( PrevTime != GetTimer() ){
			PrevTime = GetTimer();
			if( GetTimer() < 10 ){ PlaySEEx( seTimeOut ); }
		}
		SEShotHitBoss( seDamage, count );
		if( !OnBomb ){ Collision( 32, 16 ); }
		yield;
		count++;
	}
	@Finalize{
		CreateSpellResult( 114 );
		EndSpell();
		DropItem( 30, 64 );
		if( GetPlayerLife() <= 2 ){ DropBomb(); }
	}
	@DrawLoop{
		DrawCircle( imgSystemCircleBig, count, 256 );
		if( !OnBomb() ){ DrawBossChr( imgEnemyRenko, 1, 1, 43, 72, count ); }
	}
	@BackGround{ RenkoBG( imgSpellRenko ); }
}
